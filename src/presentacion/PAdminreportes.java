/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * adminreportes.java
 *
 * Created on Oct 27, 2009, 9:32:20 PM
 */

package presentacion;

import control.AdministrarReportes;
import entidad.Boleta;
import entidad.Evento;
import entidad.Historicoevento;
import entidad.Locacion;
import entidad.Registroventa;
import entidad.Remuneracion;
import entidad.Reporteventas;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alirio
 */
public class PAdminreportes extends javax.swing.JFrame {

    private PAdministrador parent;
    private AdministrarReportes administrarReportes;
    private List<Evento> eventos, eventosCancelados;
    private List<Reporteventas> reportesEventos, reportesFecha;

    /** Creates new form adminreportes */
    public PAdminreportes(PAdministrador parent) {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        this.parent=parent;
        administrarReportes = new AdministrarReportes();
        eventos = new ArrayList();
        reportesEventos = new ArrayList();
        reportesFecha = new ArrayList();
        eventosCancelados = new ArrayList();
        cargarEventosCancelados();
        cargarEventos();
        cargarReportesPorEvento();
        cargarReportesPorFecha();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        listaEventos = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        generarPorEvento = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        registrosPorEvento = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        totalVendidas = new javax.swing.JTextField();
        totalReservadas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        valorVentas = new javax.swing.JTextField();
        disponibles = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        listaReportesEventos = new javax.swing.JComboBox();
        consultarPorEvento = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        generarPorFecha = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        dia = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        mes = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        anio = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        listaReportesFecha = new javax.swing.JComboBox();
        consultarPorFecha = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        totalVendidas1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        totalReservadas1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        registrosPorFecha = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        valorVentas1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        finalizados = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        listaEventosCancelados = new javax.swing.JComboBox();
        consultarCancelacion = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cancelacionrep = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        totalRemunerados = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        pendientes = new javax.swing.JTextField();
        salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reportes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 13), new java.awt.Color(0, 0, 0))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Nuevo reporte"));

        jLabel1.setText("Evento:");

        generarPorEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/new.gif"))); // NOI18N
        generarPorEvento.setText("Generar reporte");
        generarPorEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarPorEventoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(generarPorEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(listaEventos, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(listaEventos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(generarPorEvento)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles"));

        registrosPorEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha registro", "Locacion", "Valor pagado", "Estado boleta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        registrosPorEvento.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(registrosPorEvento);

        jLabel2.setText("Registro de ventas:");

        jLabel3.setText("Total boletas vendidas:");

        jLabel4.setText("Total boletas reservadas:");

        jLabel5.setText("Total vendido:");

        totalVendidas.setEditable(false);

        totalReservadas.setEditable(false);

        jLabel6.setText("$");

        valorVentas.setEditable(false);

        disponibles.setEditable(false);

        jLabel7.setText("Boletas disponibles:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(528, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalVendidas, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalReservadas, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel7)
                .addGap(10, 10, 10)
                .addComponent(disponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(272, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addGap(6, 6, 6)
                .addComponent(valorVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalReservadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(totalVendidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(disponibles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(valorVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Reportes existentes"));

        consultarPorEvento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/search.gif"))); // NOI18N
        consultarPorEvento.setText("Consultar");
        consultarPorEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarPorEventoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listaReportesEventos, 0, 325, Short.MAX_VALUE)
                    .addComponent(consultarPorEvento, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(listaReportesEventos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(consultarPorEvento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ventas por Evento", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Nuevo reporte"));

        generarPorFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/new.gif"))); // NOI18N
        generarPorFecha.setText("Generar reporte");
        generarPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarPorFechaActionPerformed(evt);
            }
        });

        jLabel8.setText("Día:");

        dia.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), null, Integer.valueOf(31), Integer.valueOf(1)));

        jLabel9.setText("Mes:");

        mes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jLabel10.setText("Año:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(generarPorFecha)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anio, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(generarPorFecha)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Reportes existentes"));

        consultarPorFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/search.gif"))); // NOI18N
        consultarPorFecha.setText("Consultar");
        consultarPorFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarPorFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(consultarPorFecha)
                    .addComponent(listaReportesFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listaReportesFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(consultarPorFecha)
                .addContainerGap())
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalles"));

        jLabel11.setText("Total boletas vendidas:");

        totalVendidas1.setEditable(false);

        jLabel12.setText("Total boletas reservadas:");

        totalReservadas1.setEditable(false);

        registrosPorFecha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha registro", "Evento", "Cantidad boletas", "Total vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        registrosPorFecha.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane2.setViewportView(registrosPorFecha);

        jLabel13.setText("Registro de ventas:");

        jLabel14.setText("Total vendido:");

        valorVentas1.setEditable(false);

        jLabel15.setText("$");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalVendidas1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalReservadas1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addGap(6, 6, 6)
                        .addComponent(valorVentas1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalReservadas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(totalVendidas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(valorVentas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("Ventas por Fecha", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        finalizados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Evento", "Estado", "Boletas vendidas", "Total Boletas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        finalizados.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane4.setViewportView(finalizados);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/search.gif"))); // NOI18N
        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE))
                .addGap(147, 147, 147))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Eventos finalizados", jPanel4);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Escoger evento"));

        consultarCancelacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/search.gif"))); // NOI18N
        consultarCancelacion.setText("Consultar");
        consultarCancelacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarCancelacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listaEventosCancelados, 0, 240, Short.MAX_VALUE)
                    .addComponent(consultarCancelacion, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listaEventosCancelados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(consultarCancelacion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancelacionrep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Documento cliente", "Valor devuelto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cancelacionrep.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane3.setViewportView(cancelacionrep);

        jLabel16.setText("Total remunerados:");

        totalRemunerados.setEditable(false);

        jLabel17.setText("Pendientes:");

        pendientes.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pendientes)
                            .addComponent(totalRemunerados, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(totalRemunerados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(pendientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Eventos cancelados", jPanel3);

        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/salir.gif"))); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salir)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        parent.setVisible(true);
    }//GEN-LAST:event_salirActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        parent.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void generarPorEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarPorEventoActionPerformed
        if (!eventos.isEmpty()){
            Reporteventas reporte = administrarReportes.generarReporteVentasPorEvento(eventos.get(listaEventos.getSelectedIndex()));
            mostrarReporteEventos(reporte);
            cargarReportesPorEvento();
        }else
            JOptionPane.showMessageDialog(null, "No hay eventos");
    }//GEN-LAST:event_generarPorEventoActionPerformed

    private void consultarPorEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarPorEventoActionPerformed
        if (!reportesEventos.isEmpty()){
            mostrarReporteEventos(reportesEventos.get(listaReportesEventos.getSelectedIndex()));
        }else
            JOptionPane.showMessageDialog(null, "No se ha generado ningún reporte");
    }//GEN-LAST:event_consultarPorEventoActionPerformed

    private void generarPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarPorFechaActionPerformed
        boolean parsing = true;
        Date fecha = null;
        //se realiza un String con el formato de fecha a ingresar obteniendo los datos del formulario
        String textoFecha = "" + anio.getText() + "-" + (mes.getSelectedIndex()+1) + "-" + dia.getValue();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");
        try {
            //Se obtiene la fecha a partir del String de formato de fecha
            fecha = formatoFecha.parse(textoFecha);
        } catch (ParseException ex) {
            parsing=false;
        }
        if (parsing){
            Reporteventas reporte = administrarReportes.generarReporteVentasPorFecha(fecha);
            if (reporte != null){
                mostrarReporteFecha(reporte);
                cargarReportesPorFecha();
            }else
                JOptionPane.showMessageDialog(null, "No hay ventas registradas en ese dia");
        }

    }//GEN-LAST:event_generarPorFechaActionPerformed

    private void consultarPorFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarPorFechaActionPerformed
        if (!reportesFecha.isEmpty()){
            mostrarReporteFecha(reportesFecha.get(listaReportesFecha.getSelectedIndex()));
        }else
            JOptionPane.showMessageDialog(null, "No se ha generado ningún reporte");
    }//GEN-LAST:event_consultarPorFechaActionPerformed

    private void consultarCancelacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarCancelacionActionPerformed
        borrarDatosTablaCancelados();
        if (!eventosCancelados.isEmpty()){
            List<Remuneracion> reporte = administrarReportes.obtenerRemuneracionPorEvento(eventosCancelados.get(listaEventosCancelados.getSelectedIndex()));
            int totalClientes = administrarReportes.obtenerTotalClientes(eventosCancelados.get(listaEventosCancelados.getSelectedIndex()));
            if (!reporte.isEmpty()){
                int remunerados = 0;
                DefaultTableModel modelo = new DefaultTableModel();
                modelo = (DefaultTableModel) cancelacionrep.getModel();
                String fecha;
                Calendar aux = Calendar.getInstance();
                for (int i=0; i<reporte.size(); i++){
                    aux.setTime(reporte.get(i).getFecha());
                    fecha = "" + aux.get(Calendar.YEAR) + "-" + aux.get(Calendar.MONTH) + "-" + aux.get(Calendar.DAY_OF_MONTH);
                    remunerados ++;
                    modelo.insertRow(i, new Object[]{fecha,reporte.get(i).getDocumento(), reporte.get(i).getValor()});
                }
                totalRemunerados.setText("" + remunerados);
                pendientes.setText("" + (totalClientes - remunerados));
            }else{
                totalRemunerados.setText("0");
                pendientes.setText("" + totalClientes);
            }
        }
    }//GEN-LAST:event_consultarCancelacionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        borrarDatosTablaFinalizados();
        List<Historicoevento> historico = administrarReportes.obtenerHistoricos();
        if (!historico.isEmpty()){
            DefaultTableModel modelo = new DefaultTableModel();
            modelo = (DefaultTableModel) finalizados.getModel();
            String fecha;
            Calendar aux = Calendar.getInstance();
            for (int i=0; i<historico.size(); i++){
                aux.setTime(historico.get(i).getFecha());
                fecha = "" + aux.get(Calendar.YEAR) + "-" + aux.get(Calendar.MONTH) + "-" + aux.get(Calendar.DAY_OF_MONTH);
                modelo.insertRow(i, new Object[]{fecha,historico.get(i).getEvento(),historico.get(i).getEstado(),historico.get(i).getBoletasVendidas(),historico.get(i).getTotalBoletas()});
            }
        }else
            JOptionPane.showMessageDialog(null, "No hay reporte de históricos");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cargarEventos() {
        eventos = administrarReportes.obtenerEventosPorEstado("Activo");
        if (!eventos.isEmpty()){
            for (int i=0; i<eventos.size(); i++){
                listaEventos.addItem(eventos.get(i).getNombre());
            }
        }else
            listaEventos.addItem("No hay eventos activos");
    }

    private void cargarReportesPorEvento() {
        listaReportesEventos.removeAllItems();
        reportesEventos = administrarReportes.obtenerReportesPorTipo("Evt");
        if (!reportesEventos.isEmpty()){
            for (int i=0; i<reportesEventos.size(); i++){
                Calendar fecha = Calendar.getInstance();
                fecha.setTime(reportesEventos.get(i).getFechaReporte());
                String displayFecha = "" + fecha.get(Calendar.YEAR) + " / " + (fecha.get(Calendar.MONTH) + 1) + " / " +
                        fecha.get(Calendar.DAY_OF_MONTH);
                listaReportesEventos.addItem(reportesEventos.get(i).getEvento() + " - " + displayFecha);
            }
        }else
            listaReportesEventos.addItem("No hay reportes");
    }

    private void cargarReportesPorFecha() {
        listaReportesFecha.removeAllItems();
        reportesFecha = administrarReportes.obtenerReportesPorTipo("Fec");
        if (!reportesFecha.isEmpty()){
            for (int i=0; i<reportesFecha.size(); i++){
                Calendar fecha = Calendar.getInstance();
                fecha.setTime(reportesFecha.get(i).getFechaSolicitud());
                String displayFecha = "" + fecha.get(Calendar.YEAR) + " / " + (fecha.get(Calendar.MONTH) + 1) + " / " +
                        fecha.get(Calendar.DAY_OF_MONTH);
                listaReportesFecha.addItem(displayFecha);
            }
        }else
            listaReportesFecha.addItem("No hay reportes");
    }

    private void mostrarReporteEventos(Reporteventas reporte) {
        borrarDatosTablaEventos();
        totalVendidas.setText("" + reporte.getBoletasVendidas());
        totalReservadas.setText("" + reporte.getBoletasReservadas());
        disponibles.setText("" + reporte.getBoletasnovendidas());
        valorVentas.setText("" + reporte.getTotalVendido());
        if (reporte.getTotalVendido() == 0){            
            JOptionPane.showMessageDialog(null, "El evento no registra ventas hasta la fecha de este reporte");
        }else{
            List<Registroventa> registrosVentas = administrarReportes.obtenerRegistrosPorEvento(reporte.getEvento());
            Locacion locacion;
            List<Boleta> boletas;
            DefaultTableModel modelo = new DefaultTableModel();
            modelo = (DefaultTableModel) registrosPorEvento.getModel();
            String fecha;
            Calendar aux = Calendar.getInstance();
            for (int i=0; i<registrosVentas.size(); i++){
                locacion = administrarReportes.obtenerLoccionPorRegistro(registrosVentas.get(i));
                boletas = administrarReportes.obtenerBoletasPorRegistro(registrosVentas.get(i));
                aux.setTime(registrosVentas.get(i).getFecha());
                fecha = "" + aux.get(Calendar.YEAR) + "-" + (aux.get(Calendar.MONTH) + 1) + "-" + aux.get(Calendar.DAY_OF_MONTH);
                for (int j=0; j<boletas.size(); j++){
                    modelo.insertRow(i, new Object[]{fecha,locacion.getNombre(),boletas.get(j).getAbono(),boletas.get(j).getEstado()});
                }
            }
            registrosPorEvento.setModel(modelo);
        }
    }

    private void borrarDatosTablaEventos(){
        registrosPorEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha registro", "Locacion", "Valor pagado", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }

    private void borrarDatosTablaFinalizados(){
        finalizados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Evento", "Estado", "Boletas vendidas", "Total boletas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }

    private void borrarDatosTablaCancelados(){
        cancelacionrep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha","Documento cliente", "Valor devuelto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }

    private void borrarDatosTablaFecha(){
        registrosPorFecha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha registro", "Evento", "Cantidad boletas", "Total vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }

    private void mostrarReporteFecha(Reporteventas reporte) {
        borrarDatosTablaFecha();
        totalVendidas1.setText("" + reporte.getBoletasVendidas());
        totalReservadas1.setText("" + reporte.getBoletasReservadas());
        valorVentas1.setText("" + reporte.getTotalVendido());
        List<Registroventa> registrosVentas = administrarReportes.obtenerRegistrosPorFecha(reporte.getFechaSolicitud());        
        DefaultTableModel modelo = new DefaultTableModel();
        modelo = (DefaultTableModel) registrosPorFecha.getModel();
        String fecha;
        Calendar aux = Calendar.getInstance();
        for (int i=0; i<registrosVentas.size(); i++){            
            aux.setTime(registrosVentas.get(i).getFecha());
            fecha = "" + aux.get(Calendar.YEAR) + "-" + (aux.get(Calendar.MONTH) + 1) + "-" + aux.get(Calendar.DAY_OF_MONTH);
            modelo.insertRow(i, new Object[]{fecha,registrosVentas.get(i).getEvento(),registrosVentas.get(i).getCantidadBoletas(),registrosVentas.get(i).getTotalVendido()});
        }
        registrosPorEvento.setModel(modelo);
    }

    private void cargarEventosCancelados() {
        eventosCancelados = administrarReportes.obtenerEventosPorEstado("Cancelado");
        if (!eventosCancelados.isEmpty()){
            for (int i=0; i<eventosCancelados.size(); i++){
                listaEventosCancelados.addItem(eventosCancelados.get(i).getNombre());
            }
        }else
            listaEventosCancelados.addItem("No hay eventos cancelados");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField anio;
    private javax.swing.JTable cancelacionrep;
    private javax.swing.JButton consultarCancelacion;
    private javax.swing.JButton consultarPorEvento;
    private javax.swing.JButton consultarPorFecha;
    private javax.swing.JSpinner dia;
    private javax.swing.JTextField disponibles;
    private javax.swing.JTable finalizados;
    private javax.swing.JButton generarPorEvento;
    private javax.swing.JButton generarPorFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox listaEventos;
    private javax.swing.JComboBox listaEventosCancelados;
    private javax.swing.JComboBox listaReportesEventos;
    private javax.swing.JComboBox listaReportesFecha;
    private javax.swing.JComboBox mes;
    private javax.swing.JTextField pendientes;
    private javax.swing.JTable registrosPorEvento;
    private javax.swing.JTable registrosPorFecha;
    private javax.swing.JButton salir;
    private javax.swing.JTextField totalRemunerados;
    private javax.swing.JTextField totalReservadas;
    private javax.swing.JTextField totalReservadas1;
    private javax.swing.JTextField totalVendidas;
    private javax.swing.JTextField totalVendidas1;
    private javax.swing.JTextField valorVentas;
    private javax.swing.JTextField valorVentas1;
    // End of variables declaration//GEN-END:variables







    

}
