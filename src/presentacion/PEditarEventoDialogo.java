/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PEditarEventoDialogo.java
 *
 * Created on 28/11/2009, 03:10:48 PM
 */

package presentacion;

import control.AdministrarEvento;
import entidad.Categoria;
import entidad.Evento;
import entidad.Locacion;
import entidad.Presentacion;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Frank
 */
public class PEditarEventoDialogo extends javax.swing.JDialog {

    private AdministrarEvento administrarEvento;
    private PAdminevento parent;
    private Evento eventoEdicion;
    private List<Evento> eventos;
    private List<List<Locacion>> locaciones;
    private List<Presentacion> presentaciones;

    /** Creates new form PEditarEventoDialogo */
    public PEditarEventoDialogo(PAdminevento parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        administrarEvento = parent.getAdministrarEvento();
        eventos = new ArrayList();
        locaciones = new ArrayList();
        this.parent = parent;
        colocarTipos();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        tipo = new javax.swing.JComboBox();
        categoria = new javax.swing.JComboBox();
        evento = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/search.gif"))); // NOI18N
        editar.setText("Consultar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/salir.gif"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });

        categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriaActionPerformed(evt);
            }
        });

        evento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventoActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo:");

        jLabel2.setText("Categor√≠a:");

        jLabel3.setText("Evento:");

        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Seleccione un evento a consultar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(evento, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tipo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(editar, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(cancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(evento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editar)
                    .addComponent(cancelar))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        Categoria cat = administrarEvento.getCategoriaByName((String)tipo.getSelectedItem());
        //Se obtienen las categorias relacionadas con ese tipo de evento
        List<Categoria> categorias =administrarEvento.getCategoriaByType(cat);
        categoria.removeAllItems();
        //Se verifica que se encontraron categorias
        if (!categorias.isEmpty()){
            for (int i=0; i<categorias.size(); i++){
                //Se actualiza la lista de categorias
                categoria.addItem(categorias.get(i).getNombre());
            }
        }else{
            categoria.addItem("- No registra -");
        }
    }//GEN-LAST:event_tipoActionPerformed

    private void categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriaActionPerformed
        eventos.clear();
        evento.removeAllItems();
        eventos = administrarEvento.getEventosByCategoria((String)categoria.getSelectedItem());
        if (!eventos.isEmpty()){
            for (int i=0; i<eventos.size(); i++){
                evento.addItem(eventos.get(i).getNombre());
            }
            eventoEdicion = eventos.get(evento.getSelectedIndex());
            obtenerPresentaciones(eventoEdicion);
        }else
            evento.addItem("- No registra -");
    }//GEN-LAST:event_categoriaActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        parent.setEventoEdicion(null);
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        String nombreEvt = (String)evento.getSelectedItem();
        if(!nombreEvt.equals("- No registra -")){
            parent.setEventoEdicion(eventoEdicion);
            parent.setPresentaciones(presentaciones);
            parent.setLocaciones(locaciones.get(0));
            parent.setLocacionesPorPresentacion(locaciones);
        }else
            parent.setEventoEdicion(null);
        this.dispose();
    }//GEN-LAST:event_editarActionPerformed

    private void eventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventoActionPerformed
        if(!eventos.isEmpty() && evento.getSelectedIndex()>=0){
            eventoEdicion = eventos.get(evento.getSelectedIndex());
            obtenerPresentaciones(eventoEdicion);
        }
    }//GEN-LAST:event_eventoActionPerformed

    private void colocarTipos() {
        List<Categoria> categorias = administrarEvento.getCategorias();
        if (!categorias.isEmpty()){
            for (int i=0; i<categorias.size(); i++){
                if (categorias.get(i).getFkCategoria() == null){
                    tipo.addItem(categorias.get(i).getNombre());
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar;
    private javax.swing.JComboBox categoria;
    private javax.swing.JButton editar;
    private javax.swing.JComboBox evento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox tipo;
    // End of variables declaration//GEN-END:variables

    private void obtenerPresentaciones(Evento eventoEdicion) {
        locaciones.clear();
        presentaciones = administrarEvento.getPresentacionesByEvento(eventoEdicion);

        for (int i=0; i<presentaciones.size(); i++){
            locaciones.add(administrarEvento.getLocacionesByPresentacion(presentaciones.get(i)));
        }
    }

}
