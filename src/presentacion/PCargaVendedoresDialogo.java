/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PCargaVendedoresDialogo.java
 *
 * Created on 9/12/2009, 02:59:10 AM
 */

package presentacion;

import control.RegistrarVendedor;
import entidad.Usuario;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Frank
 */
public class PCargaVendedoresDialogo extends javax.swing.JDialog {

    private PAdminvendedor parent;
    private List<Usuario> vendedores;
    private RegistrarVendedor registrar;

    /** Creates new form PCargaVendedoresDialogo */
    public PCargaVendedoresDialogo(PAdminvendedor parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cedula.setEditable(false);
        this.parent = parent;
        registrar = new RegistrarVendedor();
        cargarVendedores();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nombre = new javax.swing.JComboBox();
        porNombre = new javax.swing.JRadioButton();
        cedula = new javax.swing.JTextField();
        porCedula = new javax.swing.JRadioButton();
        cancelar = new javax.swing.JButton();
        cargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Escoja el vendedor a editar"));

        porNombre.setSelected(true);
        porNombre.setText("Por nombre");
        porNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porNombreActionPerformed(evt);
            }
        });

        porCedula.setText("Por cédula");
        porCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porCedulaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(nombre, 0, 233, Short.MAX_VALUE))
                    .addComponent(porNombre)
                    .addComponent(porCedula)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(cedula)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(porNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(porCedula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/salir.gif"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        cargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/load.gif"))); // NOI18N
        cargar.setText("Cargar datos");
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(cancelar)
                        .addGap(18, 18, 18)
                        .addComponent(cargar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelar)
                    .addComponent(cargar))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void porNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porNombreActionPerformed
        if (porNombre.isSelected() && porCedula.isSelected()){
            nombre.setEnabled(true);
            cedula.setEditable(false);
            porCedula.setSelected(false);
            porCedula.setSelected(false);
        }
    }//GEN-LAST:event_porNombreActionPerformed

    private void porCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porCedulaActionPerformed
        if (porCedula.isSelected() && porNombre.isSelected()){
            nombre.setEnabled(false);
            cedula.setEditable(true);
            porNombre.setSelected(false);
            porNombre.setSelected(false);
        }        
    }//GEN-LAST:event_porCedulaActionPerformed

    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        if (porNombre.isSelected()){
            if (vendedores != null){
                parent.setUsuarioActual(vendedores.get(nombre.getSelectedIndex()));
                this.dispose();
            }
        }else{
            if (!cedula.getText().isEmpty()){
                Usuario usuario = registrar.obtenerVendedorPorCedula(cedula.getText());
                if (usuario != null){
                    parent.setUsuarioActual(usuario);
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "No hay vendedores con el documento dado");
                }
            }else
                JOptionPane.showMessageDialog(null, "Por favor ingrese un numero de cédula");
        }
    }//GEN-LAST:event_cargarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        parent.setUsuarioActual(null);
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar;
    private javax.swing.JButton cargar;
    private javax.swing.JTextField cedula;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox nombre;
    private javax.swing.JRadioButton porCedula;
    private javax.swing.JRadioButton porNombre;
    // End of variables declaration//GEN-END:variables

    private void cargarVendedores() {
        vendedores = registrar.obtenerTodos("Vendedor");
        if (vendedores != null)
            for (int i=0; i<vendedores.size(); i++){
                nombre.addItem("" + vendedores.get(i).getApellidos() + " " + vendedores.get(i).getNombres());
            }
        else
            nombre.addItem("No hay vendedores");
    }

}
