/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ventaBoleta.java
 *
 * Created on 4/11/2009, 06:59:49 PM
 */

package presentacion;

import entidad.Usuario;
import java.awt.Color;
import control.AdministrarVentas;
import entidad.Categoria;
import entidad.Evento;
import entidad.Locacion;
import entidad.Presentacion;
import entidad.Registroventa;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Frank
 */
public class PVentaBoleta extends javax.swing.JFrame {

    private PVendedor parent;
    private Usuario usuario;
    private AdministrarVentas administrarVentas;
    private Evento eventoCompra, eventoReserva;
    private List<Presentacion> presentaciones;
    private List<List<Locacion>> locaciones;
    private List<Evento> eventos;
    private Registroventa registroReserva;
    private boolean reservaCargada;
    private double saldoReserva;
    private int numBoletas;

    /** Creates new form ventaBoleta */
    public PVentaBoleta(PVendedor parent) {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        this.parent=parent;
        reservaCargada = false;
        presentaciones = new ArrayList();
        locaciones = new ArrayList();
        administrarVentas = new AdministrarVentas();
        usuario = administrarVentas.obtenerUsuario(parent.getUsuario());
        cargarCategorias();
        if (!totalAPagar.getText().isEmpty())
            abonoMinimo.setText("" + Double.valueOf(totalAPagar.getText()).doubleValue() * administrarVentas.getPorcentajeReserva());
        cancelarActualizacion.setVisible(false);
        cargarReserva.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salir = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        panelPago = new javax.swing.JPanel();
        panelCompra = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        pagoRealizado = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cambio = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        registrarVenta = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        abono = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        saldo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        abonoMinimo = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        registrarReserva = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        documentoReserva = new javax.swing.JTextField();
        cargarReserva = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        permitirCarga = new javax.swing.JCheckBox();
        cancelarActualizacion = new javax.swing.JButton();
        panelEvento = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        categoriaEvento = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nombreEvento = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        locacion = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        presentacion = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        tipoEvento = new javax.swing.JComboBox();
        panelDetalleCompra = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cantidadBoletas = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        valorBoleta = new javax.swing.JTextField();
        totalAPagar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        panelCliente = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tipoDocumento = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        numeroDocumento = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/salir.gif"))); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelPago.setBackground(new java.awt.Color(255, 255, 255));
        panelPago.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de pago"));

        panelCompra.setBackground(new java.awt.Color(255, 255, 255));
        panelCompra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setText("Pago realizado:");

        pagoRealizado.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                pagoRealizadoCaretUpdate(evt);
            }
        });
        pagoRealizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagoRealizadoActionPerformed(evt);
            }
        });

        jLabel12.setText("Cambio:");

        jLabel13.setText("$");

        cambio.setEditable(false);
        cambio.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel14.setText("$");

        javax.swing.GroupLayout panelCompraLayout = new javax.swing.GroupLayout(panelCompra);
        panelCompra.setLayout(panelCompraLayout);
        panelCompraLayout.setHorizontalGroup(
            panelCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCompraLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCompraLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cambio, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCompraLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pagoRealizado, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelCompraLayout.setVerticalGroup(
            panelCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCompraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(pagoRealizado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPagoLayout = new javax.swing.GroupLayout(panelPago);
        panelPago.setLayout(panelPagoLayout);
        panelPagoLayout.setHorizontalGroup(
            panelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPagoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelPagoLayout.setVerticalGroup(
            panelPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPagoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        registrarVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/esce.gif"))); // NOI18N
        registrarVenta.setText("Registrar venta");
        registrarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registrarVenta)
                    .addComponent(panelPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(panelPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(registrarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Venta", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Reseva"));

        abono.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        abono.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                abonoCaretUpdate(evt);
            }
        });

        jLabel17.setText("Abono:");

        jLabel18.setText("Saldo:");

        saldo.setEditable(false);
        saldo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel19.setText("Abono mínimo:");

        abonoMinimo.setEditable(false);
        abonoMinimo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel21.setText("$");

        jLabel22.setText("$");

        jLabel23.setText("$");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(abono, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(abonoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(abono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel22))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(abonoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addContainerGap())
        );

        registrarReserva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/ticket.gif"))); // NOI18N
        registrarReserva.setText("Registrar reserva");
        registrarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarReservaActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Reserva registrada"));

        documentoReserva.setEditable(false);

        cargarReserva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/load.gif"))); // NOI18N
        cargarReserva.setText("Cargar datos");
        cargarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarReservaActionPerformed(evt);
            }
        });

        jLabel20.setText("Documento:");

        permitirCarga.setBackground(new java.awt.Color(255, 255, 255));
        permitirCarga.setText("Cargar Reserva");
        permitirCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permitirCargaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(permitirCarga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cargarReserva))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(documentoReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(documentoReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(permitirCarga)
                    .addComponent(cargarReserva))
                .addContainerGap())
        );

        cancelarActualizacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/imagenes/eliminar.gif"))); // NOI18N
        cancelarActualizacion.setText("Cancelar");
        cancelarActualizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActualizacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cancelarActualizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(registrarReserva))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registrarReserva)
                    .addComponent(cancelarActualizacion))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reserva", jPanel2);

        panelEvento.setBackground(new java.awt.Color(255, 255, 255));
        panelEvento.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de evento"));

        jLabel1.setText("Categoría:");

        categoriaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriaEventoActionPerformed(evt);
            }
        });

        jLabel2.setText("Evento:");

        nombreEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreEventoActionPerformed(evt);
            }
        });

        jLabel3.setText("Locación:");

        locacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locacionActionPerformed(evt);
            }
        });

        jLabel15.setText("Presentación:");

        presentacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentacionActionPerformed(evt);
            }
        });

        jLabel16.setText("Tipo:");

        tipoEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoEventoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEventoLayout = new javax.swing.GroupLayout(panelEvento);
        panelEvento.setLayout(panelEventoLayout);
        panelEventoLayout.setHorizontalGroup(
            panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEventoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(categoriaEvento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreEvento, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tipoEvento, javax.swing.GroupLayout.Alignment.LEADING, 0, 159, Short.MAX_VALUE))
                .addGap(48, 48, 48)
                .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(locacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(presentacion, 0, 164, Short.MAX_VALUE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        panelEventoLayout.setVerticalGroup(
            panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEventoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tipoEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(presentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEventoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoriaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(8, 8, 8)
                        .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nombreEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelEventoLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(panelEventoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDetalleCompra.setBackground(new java.awt.Color(255, 255, 255));
        panelDetalleCompra.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la compra"));

        jLabel6.setText("Cantidad de boletas:");

        cantidadBoletas.setModel(new javax.swing.SpinnerNumberModel(0, 0, 20, 1));
        cantidadBoletas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cantidadBoletasStateChanged(evt);
            }
        });

        jLabel7.setText("Total a pagar:");

        jLabel8.setText("Valor boleta:");

        valorBoleta.setEditable(false);
        valorBoleta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        totalAPagar.setEditable(false);
        totalAPagar.setFont(new java.awt.Font("DejaVu Sans", 3, 13)); // NOI18N
        totalAPagar.setForeground(new java.awt.Color(255, 0, 0));
        totalAPagar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalAPagar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                totalAPagarCaretUpdate(evt);
            }
        });

        jLabel9.setText("$");

        jLabel10.setText("$");

        javax.swing.GroupLayout panelDetalleCompraLayout = new javax.swing.GroupLayout(panelDetalleCompra);
        panelDetalleCompra.setLayout(panelDetalleCompraLayout);
        panelDetalleCompraLayout.setHorizontalGroup(
            panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetalleCompraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDetalleCompraLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(cantidadBoletas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDetalleCompraLayout.createSequentialGroup()
                        .addGroup(panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(totalAPagar)
                            .addComponent(valorBoleta, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelDetalleCompraLayout.setVerticalGroup(
            panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetalleCompraLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cantidadBoletas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(valorBoleta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(panelDetalleCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(totalAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        panelCliente.setBackground(new java.awt.Color(255, 255, 255));
        panelCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del cliente"));

        jLabel4.setText("Tipo de documento:");

        tipoDocumento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cedula de Ciudadanía", "Tarjeta de identidad", "Cédula de extranjería", "Libreta militar" }));

        jLabel5.setText("No. documento:");

        numeroDocumento.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout panelClienteLayout = new javax.swing.GroupLayout(panelCliente);
        panelCliente.setLayout(panelClienteLayout);
        panelClienteLayout.setHorizontalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(26, 26, 26)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tipoDocumento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numeroDocumento))
                .addContainerGap())
        );
        panelClienteLayout.setVerticalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(numeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelDetalleCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(panelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panelEvento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
                    .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelDetalleCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        this.setVisible(false);
        parent.setVisible(true);
    }//GEN-LAST:event_salirActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        parent.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void categoriaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriaEventoActionPerformed
        nombreEvento.removeAllItems();
        eventos = administrarVentas.getEventosByCategoria((String)categoriaEvento.getSelectedItem());
        if (!eventos.isEmpty()){
            for (int i=0; i<eventos.size(); i++){
                nombreEvento.addItem(eventos.get(i).getNombre());
            }            
        }else{            
            nombreEvento.addItem("- No registra -");
            presentacion.addItem("- No hay Evento -");
            locacion.addItem("- No hay presentación -");
        }
    }//GEN-LAST:event_categoriaEventoActionPerformed

    private void tipoEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoEventoActionPerformed
        Categoria cat = administrarVentas.getCategoriaByName((String)tipoEvento.getSelectedItem());
        List<Categoria> categorias = administrarVentas.getCategoriaByType(cat);
        categoriaEvento.removeAllItems();
        if (!categorias.isEmpty()){
            for (int i=0; i<categorias.size(); i++){
                categoriaEvento.addItem(categorias.get(i).getNombre());
            }
        }else{
            categoriaEvento.addItem("- No registra -");
        }
    }//GEN-LAST:event_tipoEventoActionPerformed

    private void cantidadBoletasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cantidadBoletasStateChanged
        double montoTotal;
        montoTotal = Double.valueOf(valorBoleta.getText()).doubleValue() * (Integer)cantidadBoletas.getValue();
        totalAPagar.setText("" + montoTotal);        
    }//GEN-LAST:event_cantidadBoletasStateChanged

    private void nombreEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreEventoActionPerformed
        presentacion.removeAllItems();
        presentaciones.clear();
        locaciones.clear();
        eventoCompra = null;
        if (nombreEvento.getSelectedIndex() >= 0 && !eventos.isEmpty()){
            int i;
            eventoCompra = eventos.get(nombreEvento.getSelectedIndex());
            
            locaciones.clear();
            String textoFecha;
            Calendar fecha = Calendar.getInstance();
            presentaciones = administrarVentas.getPresentacionesByEvento(eventoCompra);
            List<Locacion> auxLocaciones;
            for (i=0; i<presentaciones.size(); i++){
                auxLocaciones = administrarVentas.getLocacionesByPresentacion(presentaciones.get(i));
                locaciones.add(auxLocaciones);                
            }

            for (i=0; i<presentaciones.size(); i++){
                fecha.setTime(presentaciones.get(i).getFecha());
                textoFecha = "" + fecha.get(Calendar.YEAR) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.DAY_OF_MONTH);
                presentacion.addItem(textoFecha);
            }
        }
    }//GEN-LAST:event_nombreEventoActionPerformed

    private void presentacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentacionActionPerformed
        locacion.removeAllItems();
        if (presentacion.getSelectedIndex() >=0 && !presentaciones.isEmpty() && !locaciones.isEmpty()){
            int pos = presentacion.getSelectedIndex();
            for (int i=0; i<locaciones.get(pos).size(); i++){
                locacion.addItem(locaciones.get(pos).get(i).getNombre());
            }
        }
    }//GEN-LAST:event_presentacionActionPerformed

    private void locacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locacionActionPerformed
        if (locacion.getSelectedIndex() >= 0 && !locaciones.isEmpty())
            valorBoleta.setText("" + locaciones.get(presentacion.getSelectedIndex()).get(locacion.getSelectedIndex()).getPrecio());
        else
            valorBoleta.setText("" + 0.0);
        double montoTotal = Double.valueOf(valorBoleta.getText()).doubleValue() * (Integer)cantidadBoletas.getValue();
        totalAPagar.setText("" + montoTotal);
    }//GEN-LAST:event_locacionActionPerformed

    private void pagoRealizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagoRealizadoActionPerformed
        
    }//GEN-LAST:event_pagoRealizadoActionPerformed

    private void registrarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarVentaActionPerformed
        if (!reservaCargada){
            if ((Integer)cantidadBoletas.getValue() != 0){
                if (!pagoRealizado.getText().isEmpty()){
                    double valorApagar = Double.valueOf(totalAPagar.getText()).doubleValue();
                    double valorCancelado = Double.valueOf(pagoRealizado.getText()).doubleValue();
                    if (valorCancelado - valorApagar >= 0 && valorApagar > 0){
                        if (!numeroDocumento.getText().isEmpty()){
                            Locacion auxLocacion = locaciones.get(presentacion.getSelectedIndex()).get(locacion.getSelectedIndex());
                            int boletasDisponibles = administrarVentas.verificarCupo(auxLocacion);
                            if (boletasDisponibles > 0 && boletasDisponibles >= (Integer)cantidadBoletas.getValue()){
                                Registroventa registro = new Registroventa();
                                registro.setFkUsuario(usuario);
                                registro.setEvento(eventoCompra.getNombre());
                                registro.setCantidadBoletas("" + cantidadBoletas.getValue());
                                registro.setFecha(new Date());
                                registro.setBoletaList(null);
                                registro.setFkCliente(null);
                                registro.setTotalVendido(WIDTH);
                                registro.setTotalVendido(valorApagar);
                                registro.setDocumentoCliente(numeroDocumento.getText());
                                Date fecha = presentaciones.get(presentacion.getSelectedIndex()).getFecha();
                                administrarVentas.registrarVenta(registro, auxLocacion, fecha);
                                resetearFormulario();
                                JOptionPane.showMessageDialog(null, "La venta ha sido registrada correctamente");
                            }else
                                JOptionPane.showMessageDialog(null, "No hay boletas disponibles");
                        }else
                            JOptionPane.showMessageDialog(null, "El campo de documento no puede estar vacío");
                    }else
                        JOptionPane.showMessageDialog(null, "El valor cancelado no es suficiente para pagar el monto total\no no existe un monto a pagar");
                }else
                    JOptionPane.showMessageDialog(null, "No se ha establecido ningún pago");
            }else
                JOptionPane.showMessageDialog(null, "Escoga por lo menos una boleta para la venta");
        }
    }//GEN-LAST:event_registrarVentaActionPerformed

    private void cargarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarReservaActionPerformed
        if (!documentoReserva.getText().isEmpty()){
            List<Registroventa> registros = administrarVentas.cargarRegistros(documentoReserva.getText());
            registros = administrarVentas.verificarReserva(registros);
            if (!registros.isEmpty()){
                reservaCargada = true;
                if (registros.size() == 1){
                    registroReserva = registros.get(0);
                }else{
                    PCargaReservasDialogo carga = new PCargaReservasDialogo(this, true, registros);
                    carga.setLocationRelativeTo(null);
                    carga.setVisible(true);
                    if (registroReserva == null){
                        return;
                    }
                }
                administrarVentas.cargarReserva(this, registroReserva);
                llenarCampos();
            }else
                JOptionPane.showMessageDialog(null, "No hay reservas registradas con el documento ingresado");
        }else
            JOptionPane.showMessageDialog(null, "Ingrese un número de documento para poder cargar una reserva registrada");
    }//GEN-LAST:event_cargarReservaActionPerformed

    private void registrarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarReservaActionPerformed
        if (!reservaCargada){
            if ((Integer)cantidadBoletas.getValue() != 0){
                if (!abono.getText().isEmpty() && administrarVentas.verificarAbono(abono.getText(), totalAPagar.getText())){
                    if (!numeroDocumento.getText().isEmpty()){
                        Locacion auxLocacion = locaciones.get(presentacion.getSelectedIndex()).get(locacion.getSelectedIndex());
                        int boletasDisponibles = administrarVentas.verificarCupo(auxLocacion);
                        if (boletasDisponibles > 0 && boletasDisponibles >= (Integer)cantidadBoletas.getValue()){
                            Registroventa registro = new Registroventa();
                            double valorApagar = Double.valueOf(abono.getText()).doubleValue();
                            registro.setFecha(new Date());
                            registro.setDocumentoCliente(numeroDocumento.getText());
                            registro.setEvento(eventoCompra.getNombre());
                            registro.setCantidadBoletas("" + cantidadBoletas.getValue());
                            registro.setFkUsuario(usuario);
                            registro.setTotalVendido(valorApagar);
                            registro.setBoletaList(null);
                            registro.setFkCliente(null);
                            Date fecha = presentaciones.get(presentacion.getSelectedIndex()).getFecha();
                            administrarVentas.registrarReserva(registro, auxLocacion, fecha, abono.getText());
                            resetearFormulario();
                            JOptionPane.showMessageDialog(null, "La Reserva ha sido registrada correctamente");
                        }else
                            JOptionPane.showMessageDialog(null, "No hay boletas disponibles");
                    }else
                        JOptionPane.showMessageDialog(null, "El campo de documento no puede estar vacío");
                }else
                    JOptionPane.showMessageDialog(null, "No se ha establecido ningún abono o el abono no cumple los requisitos mínimos");
            }else
                JOptionPane.showMessageDialog(null, "Escoga por lo menos una boleta para la reserva");
        }else{
            if (!abono.getText().isEmpty()){
                administrarVentas.actualizarReserva(registroReserva, abono.getText());
                habilitarFormulario();
                JOptionPane.showMessageDialog(null, "La reserva fue actualizada correctamente");
            }else
                JOptionPane.showMessageDialog(null, "Ingrese un valor de abono");
        }
    }//GEN-LAST:event_registrarReservaActionPerformed

    private void totalAPagarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_totalAPagarCaretUpdate
        if (!totalAPagar.getText().isEmpty())
            abonoMinimo.setText("" + Double.valueOf(totalAPagar.getText()).doubleValue() * administrarVentas.getPorcentajeReserva());
    }//GEN-LAST:event_totalAPagarCaretUpdate

    private void abonoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_abonoCaretUpdate
        if (!abono.getText().isEmpty()){
            if (reservaCargada)
                saldo.setText("" + (saldoReserva - Double.valueOf(abono.getText()).doubleValue()));
            else
                saldo.setText("" + (Double.valueOf(totalAPagar.getText()).doubleValue() - Double.valueOf(abono.getText()).doubleValue()));
        }else{
            if (reservaCargada)
                saldo.setText("" + (saldoReserva - 0));
            else
                saldo.setText("" + (Double.valueOf(totalAPagar.getText()).doubleValue() - 0));
        }
    }//GEN-LAST:event_abonoCaretUpdate

    private void pagoRealizadoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_pagoRealizadoCaretUpdate
        if (!pagoRealizado.getText().isEmpty()){
            double valorCambio = Double.valueOf(pagoRealizado.getText()).doubleValue() - Double.valueOf(totalAPagar.getText()).doubleValue();
            cambio.setText("" + valorCambio);
        }else
            cambio.setText("" + 0.0);
    }//GEN-LAST:event_pagoRealizadoCaretUpdate

    private void cancelarActualizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActualizacionActionPerformed
        habilitarFormulario();
        resetearFormulario();
    }//GEN-LAST:event_cancelarActualizacionActionPerformed

    private void permitirCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permitirCargaActionPerformed
        if (permitirCarga.isSelected()){
            documentoReserva.setEditable(true);
            cargarReserva.setEnabled(true);
            numeroDocumento.setEditable(false);
        }else{
            documentoReserva.setEditable(false);
            cargarReserva.setEnabled(false);
            numeroDocumento.setEditable(true);
        }
    }//GEN-LAST:event_permitirCargaActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField abono;
    private javax.swing.JTextField abonoMinimo;
    private javax.swing.JTextField cambio;
    private javax.swing.JButton cancelarActualizacion;
    private javax.swing.JSpinner cantidadBoletas;
    private javax.swing.JButton cargarReserva;
    private javax.swing.JComboBox categoriaEvento;
    private javax.swing.JTextField documentoReserva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox locacion;
    private javax.swing.JComboBox nombreEvento;
    private javax.swing.JTextField numeroDocumento;
    private javax.swing.JTextField pagoRealizado;
    private javax.swing.JPanel panelCliente;
    private javax.swing.JPanel panelCompra;
    private javax.swing.JPanel panelDetalleCompra;
    private javax.swing.JPanel panelEvento;
    private javax.swing.JPanel panelPago;
    private javax.swing.JCheckBox permitirCarga;
    private javax.swing.JComboBox presentacion;
    private javax.swing.JButton registrarReserva;
    private javax.swing.JButton registrarVenta;
    private javax.swing.JTextField saldo;
    private javax.swing.JButton salir;
    private javax.swing.JComboBox tipoDocumento;
    private javax.swing.JComboBox tipoEvento;
    private javax.swing.JTextField totalAPagar;
    private javax.swing.JTextField valorBoleta;
    // End of variables declaration//GEN-END:variables

    private void cargarCategorias() {
        List<Categoria> categorias = administrarVentas.getCategorias();
        if (!categorias.isEmpty()){
            for (int i=0; i<categorias.size(); i++){
                if (categorias.get(i).getFkCategoria() == null){
                    tipoEvento.addItem(categorias.get(i).getNombre());
                }
            }
        }else
            tipoEvento.addItem("- No registra -");
    }

    private void resetearFormulario() {
        registroReserva = null;
        eventoReserva = null;
        saldoReserva = 0;
        numBoletas = 0;
        cantidadBoletas.setValue(0);
        tipoDocumento.setSelectedIndex(0);
        numeroDocumento.setText("");
        pagoRealizado.setText("");
        cambio.setText("");
        abono.setText("");
        documentoReserva.setText("");
        saldo.setText("");
        tipoEvento.setSelectedIndex(0);
    }

    public void setRegistroReserva(Registroventa registroReserva) {
        this.registroReserva = registroReserva;
    }

    public void setEventoReserva(Evento eventoReserva) {
        this.eventoReserva = eventoReserva;
    }

    public void setSaldoReserva(double saldoReserva) {
        this.saldoReserva = saldoReserva;
    }

    public void setNumBoletas(int numBoletas) {
        this.numBoletas = numBoletas;
    }

    private void llenarCampos() {
        int i=0;
        tipoEvento.setSelectedIndex(i);
        while (!eventoReserva.getFkCategoria().getFkCategoria().getNombre().equals((String)tipoEvento.getSelectedItem())){
            i++;
            tipoEvento.setSelectedIndex(i);
        }
        i=0;
        categoriaEvento.setSelectedIndex(i);
        while (!eventoReserva.getFkCategoria().getNombre().equals((String)categoriaEvento.getSelectedItem())){
            i++;
            categoriaEvento.setSelectedIndex(i);
        }
        i=0;
        nombreEvento.setSelectedIndex(i);
        while (!eventoReserva.getNombre().equals((String)nombreEvento.getSelectedItem())){
            i++;
            nombreEvento.setSelectedIndex(i);
        }
        i=0;
        presentacion.setSelectedIndex(i);
        String textoFecha;
        Calendar fecha = Calendar.getInstance();
        fecha.setTime(eventoReserva.getPresentacionList().get(0).getFecha());
        textoFecha = "" + fecha.get(Calendar.YEAR) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.DAY_OF_MONTH);
        while (!textoFecha.equals((String)presentacion.getSelectedItem())){
            i++;
            presentacion.setSelectedIndex(i);
        }
        i=0;
        locacion.setSelectedIndex(i);
        while (!eventoReserva.getPresentacionList().get(0).getLocacionList().get(0).getNombre().equals((String)locacion.getSelectedItem())){
            i++;
            locacion.setSelectedIndex(i);
        }
        saldo.setText("" + saldoReserva);
        cantidadBoletas.setValue(numBoletas);
        tipoEvento.setEnabled(false);
        categoriaEvento.setEnabled(false);
        nombreEvento.setEnabled(false);
        presentacion.setEnabled(false);
        locacion.setEnabled(false);
        cantidadBoletas.setEnabled(false);
        tipoDocumento.setEnabled(false);
        numeroDocumento.setEditable(false);
        documentoReserva.setEditable(false);
        cargarReserva.setEnabled(false);
        cancelarActualizacion.setVisible(true);
        registrarVenta.setEnabled(false);
        permitirCarga.setEnabled(false);
    }

    private void habilitarFormulario() {
        reservaCargada = false;
        tipoEvento.setEnabled(true);
        categoriaEvento.setEnabled(true);
        nombreEvento.setEnabled(true);
        presentacion.setEnabled(true);
        locacion.setEnabled(true);
        cantidadBoletas.setEnabled(true);
        tipoDocumento.setEnabled(true);
        documentoReserva.setEditable(true);
        cargarReserva.setEnabled(true);
        cancelarActualizacion.setVisible(false);
        registrarVenta.setEnabled(true);
        permitirCarga.setEnabled(true);
        if (permitirCarga.isSelected()){
            documentoReserva.setEditable(true);
            cargarReserva.setEnabled(true);
        }else{
            numeroDocumento.setEditable(true);
        }
        resetearFormulario();
    }

    
    
}
